{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","result","push","value","continue","name","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MACTN,WADS,CAETO,WAFS,CAEG,CAAC,MAAKN,MAAN,CAFH,EAEkB,WAFlB,EAGTO,WAHS,CAGG,MAAKP,MAHR,EAITQ,GAJS,CAILP,UAJK,CAAd;;AAMAI,wBAAQI,SAAR,GAAoB,aAAK;AAAEN;AAAW,iBAAtC;;AAEAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAKH,aAdM,CAAP;AAeH;;;sCAEa;AAAA;;AAEV,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCO,wBAAQC,GAAR,CAAY,OAAZ;AACA,oBAAII,SAAS,OACRjB,WADQ,CAERO,WAFQ,CAEI,CAAC,OAAKN,MAAN,CAFJ,EAEmB,WAFnB,EAGRO,WAHQ,CAGI,OAAKP,MAHT,EAIRiB,UAJQ,EAAb;;AAMA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIO,SAASH,EAAEC,MAAF,CAASK,MAAtB;AACA,wBAAIH,MAAJ,EAAY;AACRE,oCAAYE,IAAZ,CAAiBJ,OAAOK,KAAxB;AACAL,+BAAOM,QAAP;AACH,qBAHD,MAGO;AACHnB,gCAAQe,WAAR;AACH;AACJ,iBARD;;AAUAF,uBAAON,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAOS,EAAEC,MAAF,CAASC,KAAT,CAAeQ,IAAtB;AACH,iBAHD;AAKH,aAzBM,CAAP;AA2BH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIrB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OACTN,WADS,CAETO,WAFS,CAEG,CAAC,OAAKN,MAAN,CAFH,EAEkB,WAFlB,EAGTO,WAHS,CAGG,OAAKP,MAHR,EAITwB,KAJS,EAAd;;AAMAnB,wBAAQI,SAAR,GAAoB,aAAK;AAAEN,4BAAQ,mCAAR;AAA8C,iBAAzE;;AAEAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAKH,aAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n\n    constructor(connection) {\n        this._connection = connection\n        this._store = \"negociacoes\"\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n            let request = this\n                ._connection\n                .transaction([this._store], \"readwrite\")\n                .objectStore(this._store)\n                .add(negociacao)\n\n            request.onsuccess = e => { resolve() }\n\n            request.onerror = e => {\n                console.log(e.target.error)\n                reject(\"Não foi possível concluir a negociação\")\n            }\n\n        })\n    }\n\n    listarTodos() {\n\n        return new Promise((resolve, reject) => {\n            console.log('teste')\n            let cursor = this\n                ._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacoes = []\n\n            cursor.onsuccess = e => {\n                var cursor = e.target.result;\n                if (cursor) {\n                    negociacoes.push(cursor.value);\n                    cursor.continue();\n                } else {\n                    resolve(negociacoes);\n                }\n            }\n\n            cursor.onerror = e => {\n                console.log(e.target.error)\n                reject(e.target.error.name)\n            }\n\n        })\n\n    }\n\n    apagaTodos() {\n        return new Promise((resolve, reject) => {\n            let request = this\n                ._connection\n                .transaction([this._store], \"readwrite\")\n                .objectStore(this._store)\n                .clear()\n\n            request.onsuccess = e => { resolve(\"Negociações removidas com sucesso\") }\n\n            request.onerror = e => {\n                console.log(e.target.error)\n                reject(\"Não foi possível remover as negociações\")\n            }\n\n        })\n    }\n}"]}