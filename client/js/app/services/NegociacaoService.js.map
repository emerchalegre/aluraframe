{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","negociacao","map","Date","dado","data","quantidade","valor","console","log","objeto","getConnection","connection","dao","adiciona","listarTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\r\nimport { ConnectionFactory } from './ConnectionFactory';\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService()\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n            this.obterNegociacoesSemana(),\r\n            this.obterNegociacoesSemanaAnterior(),\r\n            this.obterNegociacoesRetrasada()\r\n        ]).then(periodos => {\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n            return negociacoes\r\n        }).catch(erro => {\r\n            throw new Error(erro)\r\n        });\r\n    }\r\n\r\n    obterNegociacoesSemana() {\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacao => {\r\n                return negociacao.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possível obter as negociações da semana\")\r\n            })\r\n    }\r\n\r\n    obterNegociacoesSemanaAnterior() {\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacao => {\r\n                return negociacao.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possível obter as negociações da semana anterior\")\r\n            })\r\n    }\r\n\r\n    obterNegociacoesRetrasada() {\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n\r\n                console.log(negociacoes);\r\n\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => \"Negociação adicionada com sucesso\")\r\n            .catch(erro => {\r\n                throw new Error(\"Não foi possível adicionar a negociação!\")\r\n            })\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listarTodos())\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possível obter as Negociações\")\r\n            })\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(mensagem => \"Dados apagados com sucesso\")\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possível obter as Negociações\")\r\n            })\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente)\r\n                    )\r\n                )\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error(\"Não foi possível importar as negociações\")\r\n            })\r\n    }\r\n}"]}